//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleClient.CalculatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operand", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class Operand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ErrorMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorService.ICalculatorService")]
    public interface ICalculatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Addition", ReplyAction="http://tempuri.org/ICalculatorService/AdditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleClient.CalculatorService.ErrorMessage), Action="http://tempuri.org/ICalculatorService/AdditionErrorMessageFault", Name="ErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
        double Addition(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Addition", ReplyAction="http://tempuri.org/ICalculatorService/AdditionResponse")]
        System.Threading.Tasks.Task<double> AdditionAsync(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Subtraction", ReplyAction="http://tempuri.org/ICalculatorService/SubtractionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleClient.CalculatorService.ErrorMessage), Action="http://tempuri.org/ICalculatorService/SubtractionErrorMessageFault", Name="ErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
        double Subtraction(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Subtraction", ReplyAction="http://tempuri.org/ICalculatorService/SubtractionResponse")]
        System.Threading.Tasks.Task<double> SubtractionAsync(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Multiplication", ReplyAction="http://tempuri.org/ICalculatorService/MultiplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleClient.CalculatorService.ErrorMessage), Action="http://tempuri.org/ICalculatorService/MultiplicationErrorMessageFault", Name="ErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
        double Multiplication(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Multiplication", ReplyAction="http://tempuri.org/ICalculatorService/MultiplicationResponse")]
        System.Threading.Tasks.Task<double> MultiplicationAsync(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Division", ReplyAction="http://tempuri.org/ICalculatorService/DivisionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleClient.CalculatorService.ErrorMessage), Action="http://tempuri.org/ICalculatorService/DivisionErrorMessageFault", Name="ErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Contracts")]
        double Division(ConsoleClient.CalculatorService.Operand operand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Division", ReplyAction="http://tempuri.org/ICalculatorService/DivisionResponse")]
        System.Threading.Tasks.Task<double> DivisionAsync(ConsoleClient.CalculatorService.Operand operand);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorServiceChannel : ConsoleClient.CalculatorService.ICalculatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceClient : System.ServiceModel.ClientBase<ConsoleClient.CalculatorService.ICalculatorService>, ConsoleClient.CalculatorService.ICalculatorService {
        
        public CalculatorServiceClient() {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Addition(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.Addition(operand);
        }
        
        public System.Threading.Tasks.Task<double> AdditionAsync(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.AdditionAsync(operand);
        }
        
        public double Subtraction(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.Subtraction(operand);
        }
        
        public System.Threading.Tasks.Task<double> SubtractionAsync(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.SubtractionAsync(operand);
        }
        
        public double Multiplication(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.Multiplication(operand);
        }
        
        public System.Threading.Tasks.Task<double> MultiplicationAsync(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.MultiplicationAsync(operand);
        }
        
        public double Division(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.Division(operand);
        }
        
        public System.Threading.Tasks.Task<double> DivisionAsync(ConsoleClient.CalculatorService.Operand operand) {
            return base.Channel.DivisionAsync(operand);
        }
    }
}
